/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.emeresys.emeresysfrontend;
import java.awt.CardLayout;
import org.openstreetmap.gui.jmapviewer.*;
import org.jfree.chart.ChartPanel;
import java.awt.*;
import javax.swing.*;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.List;
import java.util.Map;
/**
 *
 * @author USER
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
        setupMapView();
        setupAlertsPanel();
        setupChatClientGUI();
    }
    
    private void setupChatClientGUI() {
    // Create ChatClientGUIv2 instance
    ChatClientGUIv2 chatClientGUI = new ChatClientGUIv2("Admin");

    // Set the layout of the communications panel if needed
    communications.setLayout(new BorderLayout());

    // Add the ChatClientGUIv2 to the communications panel
    communications.add(chatClientGUI, BorderLayout.CENTER);

    // Revalidate and repaint to ensure the panel displays correctly
    communications.revalidate();
    communications.repaint();
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SidePane = new javax.swing.JPanel();
        dashboardButton = new javax.swing.JButton();
        commButton = new javax.swing.JButton();
        statsButton = new javax.swing.JButton();
        optionsButton = new javax.swing.JButton();
        viewpanel = new javax.swing.JPanel();
        dashboard = new javax.swing.JPanel();
        SummaryCards = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        activeResponders = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        resourcesUsed = new javax.swing.JTextArea();
        alertsPanel = new javax.swing.JPanel();
        mapView = new javax.swing.JPanel();
        communications = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        statistics = new javax.swing.JPanel();
        chartSelectorPanel = new javax.swing.JPanel();
        btnUsers = new javax.swing.JButton();
        btnResources = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        chartDisplayPanel = new javax.swing.JPanel();
        usersPanel = new javax.swing.JPanel();
        resourcesPanel = new javax.swing.JPanel();
        options = new javax.swing.JPanel();
        settingsTopNav = new javax.swing.JPanel();
        accountSettings = new javax.swing.JButton();
        settingsView = new javax.swing.JPanel();
        accountPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EMERESYS ADMIN");

        SidePane.setBackground(new java.awt.Color(255, 255, 204));
        SidePane.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SidePane.setMinimumSize(new java.awt.Dimension(75, 100));
        SidePane.setPreferredSize(new java.awt.Dimension(100, 600));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0);
        flowLayout1.setAlignOnBaseline(true);
        SidePane.setLayout(flowLayout1);

        dashboardButton.setBackground(new java.awt.Color(204, 255, 204));
        dashboardButton.setText("Dashboard");
        dashboardButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        dashboardButton.setPreferredSize(new java.awt.Dimension(100, 100));
        dashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardButtonActionPerformed(evt);
            }
        });
        SidePane.add(dashboardButton);

        commButton.setBackground(new java.awt.Color(204, 255, 255));
        commButton.setText("Comm");
        commButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        commButton.setPreferredSize(new java.awt.Dimension(100, 100));
        commButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commButtonActionPerformed(evt);
            }
        });
        SidePane.add(commButton);

        statsButton.setBackground(new java.awt.Color(204, 204, 255));
        statsButton.setText("Stats");
        statsButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        statsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        statsButton.setPreferredSize(new java.awt.Dimension(100, 100));
        statsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsButtonActionPerformed(evt);
            }
        });
        SidePane.add(statsButton);

        optionsButton.setBackground(new java.awt.Color(255, 204, 204));
        optionsButton.setText("Options");
        optionsButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        optionsButton.setPreferredSize(new java.awt.Dimension(100, 100));
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });
        SidePane.add(optionsButton);

        getContentPane().add(SidePane, java.awt.BorderLayout.LINE_START);

        viewpanel.setBackground(new java.awt.Color(255, 255, 255));
        viewpanel.setLayout(new java.awt.CardLayout());

        dashboard.setBackground(new java.awt.Color(204, 255, 204));
        dashboard.setLayout(new java.awt.BorderLayout());

        SummaryCards.setBackground(javax.swing.UIManager.getDefaults().getColor("Menu.background"));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  "logged on", "inactive" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        SummaryCards.add(jComboBox3);
        SummaryCards.add(jScrollPane1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 100));

        jLabel2.setText("<html><b>Responders<b><br>Active: </html>");

        activeResponders.setColumns(20);
        activeResponders.setRows(5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(activeResponders, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(activeResponders, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        SummaryCards.add(jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));
        jPanel3.setPreferredSize(new java.awt.Dimension(150, 100));

        jLabel3.setText("<html><b>Resources<b><br>Used: </html>");

        resourcesUsed.setColumns(20);
        resourcesUsed.setRows(5);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resourcesUsed, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(resourcesUsed, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        SummaryCards.add(jPanel3);

        dashboard.add(SummaryCards, java.awt.BorderLayout.PAGE_START);

        alertsPanel.setLayout(new java.awt.BorderLayout());
        dashboard.add(alertsPanel, java.awt.BorderLayout.PAGE_END);

        mapView.setBackground(new java.awt.Color(204, 204, 204));
        mapView.setLayout(new java.awt.BorderLayout());
        dashboard.add(mapView, java.awt.BorderLayout.CENTER);

        viewpanel.add(dashboard, "dashboard");

        communications.setBackground(new java.awt.Color(204, 255, 255));
        communications.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 717, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        communications.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 621, Short.MAX_VALUE)
        );

        communications.add(jPanel4, java.awt.BorderLayout.LINE_START);

        viewpanel.add(communications, "communications");

        statistics.setBackground(new java.awt.Color(204, 204, 255));
        statistics.setLayout(new java.awt.BorderLayout());

        chartSelectorPanel.setPreferredSize(new java.awt.Dimension(700, 50));

        btnUsers.setBackground(new java.awt.Color(255, 204, 204));
        btnUsers.setText("Users");
        btnUsers.setPreferredSize(new java.awt.Dimension(100, 50));
        btnUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsersActionPerformed(evt);
            }
        });
        chartSelectorPanel.add(btnUsers);

        btnResources.setBackground(new java.awt.Color(255, 255, 204));
        btnResources.setText("Resources");
        btnResources.setPreferredSize(new java.awt.Dimension(100, 50));
        btnResources.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResourcesActionPerformed(evt);
            }
        });
        chartSelectorPanel.add(btnResources);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pie chart", "Bar graph", "Line graph", "Table" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        chartSelectorPanel.add(jComboBox2);

        statistics.add(chartSelectorPanel, java.awt.BorderLayout.PAGE_START);

        chartDisplayPanel.setBackground(new java.awt.Color(204, 204, 255));
        chartDisplayPanel.setLayout(new java.awt.CardLayout());

        usersPanel.setBackground(new java.awt.Color(255, 204, 255));
        //JScrollPane scrollPane = new JScrollPane(usersPanel);
        usersPanel.setLayout(new javax.swing.BoxLayout(usersPanel, javax.swing.BoxLayout.LINE_AXIS));
        chartDisplayPanel.add(usersPanel, "usersPanel");

        resourcesPanel.setBackground(new java.awt.Color(255, 255, 204));
        resourcesPanel.setLayout(new javax.swing.BoxLayout(resourcesPanel, javax.swing.BoxLayout.LINE_AXIS));
        chartDisplayPanel.add(resourcesPanel, "resourcesPanel");

        statistics.add(chartDisplayPanel, java.awt.BorderLayout.CENTER);

        viewpanel.add(statistics, "statistics");

        options.setBackground(new java.awt.Color(255, 204, 204));
        options.setLayout(new java.awt.BorderLayout());

        settingsTopNav.setMinimumSize(new java.awt.Dimension(100, 50));
        settingsTopNav.setPreferredSize(new java.awt.Dimension(700, 50));

        accountSettings.setBackground(new java.awt.Color(204, 204, 255));
        accountSettings.setText("Account Settings");
        accountSettings.setPreferredSize(new java.awt.Dimension(100, 50));
        accountSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountSettingsActionPerformed(evt);
            }
        });
        settingsTopNav.add(accountSettings);

        options.add(settingsTopNav, java.awt.BorderLayout.PAGE_START);

        settingsView.setBackground(new java.awt.Color(255, 51, 51));
        settingsView.setLayout(new java.awt.CardLayout());

        accountPanel.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 717, Short.MAX_VALUE)
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 671, Short.MAX_VALUE)
        );

        settingsView.add(accountPanel, "card2");

        options.add(settingsView, java.awt.BorderLayout.CENTER);

        viewpanel.add(options, "options");

        getContentPane().add(viewpanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setupAlertsPanel(){
        // create the news ticker instance
        NewsTicker ticker = new NewsTicker();
        alertsPanel.setLayout(new java.awt.BorderLayout());
        alertsPanel.add(ticker, java.awt.BorderLayout.CENTER);
        alertsPanel.revalidate();
        alertsPanel.repaint();
        
    }
    
    
    
    //MapView method
    public void setupMapView(){
        JMapViewer mapViewer = MapViewerUtils.initializeMapViewer(12);
        
        
        // Define ping listener
    PingListener listener = (location, priority) -> {
        double latitude = Double.parseDouble(location.split(",")[0]);
        double longitude = Double.parseDouble(location.split(",")[1]);
        MapMarkerDot marker = new MapMarkerDot(new Coordinate(latitude, longitude));
        
        // Color marker based on priority
        switch (priority) {
            case "red": marker.getStyle().setColor(Color.RED); break;
            case "orange": marker.getStyle().setColor(Color.ORANGE); break;
            case "yellow": marker.getStyle().setColor(Color.YELLOW); break;
            default: marker.getStyle().setColor(Color.GRAY); break;
        }
        mapViewer.addMapMarker(marker);
        mapViewer.repaint();
    };

    // Initialize LocationPingManager with listener
    LocationPingManager pingManager = new LocationPingManager("localhost", 9090, listener);

    // Simulate Bynamic Location
    String currentLocation = getCurrentLocation(); // Fetch real-time location
pingManager.pingLocation(currentLocation, "highpriority");

        

        MapViewerUtils.addRedPing(mapViewer, new Coordinate(0.3224, 37.6525)); // Meru
    MapViewerUtils.addRedPing(mapViewer, new Coordinate(-1.2864, 36.8172)); // Nairobi
    MapViewerUtils.addRedPing(mapViewer, new Coordinate(0.4708, 36.9585)); // Embu
        mapView.setLayout(new java.awt.BorderLayout());
        mapView.add(mapViewer, java.awt.BorderLayout.CENTER);
        
        mapView.revalidate();
        mapView.repaint();
        
        javax.swing.Timer timer = new javax.swing.Timer(30000, e -> {
    pingManager.pingLocation("34.0522,-118.2437", "highpriority"); // Example: Los Angeles
});
timer.start();

    }
    public String getCurrentLocation() {
    try {
        // Fetch location from the backend
        String response = ApiClient.getUserLocation(/*userId*/ 1L); // Example userId
        System.out.println("Backend Location: " + response);
        
        
        System.out.println("Backend Location Response: " + response);
        return response;
    } catch (Exception e) {
        e.printStackTrace();
        System.err.println("Failed to fetch location: " + e.getMessage());
        return "0.0,0.0"; // Return a fallback location
       

    }
}

    
    
    
    
    private void dashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardButtonActionPerformed
        // TODO add your handling code here:
        CardLayout cl = (CardLayout) viewpanel.getLayout();
        cl.show(viewpanel, "dashboard");
    }//GEN-LAST:event_dashboardButtonActionPerformed

    private void commButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commButtonActionPerformed
        // TODO add your handling code here:
        CardLayout cl = (CardLayout) viewpanel.getLayout();
        cl.show(viewpanel, "communications");
    }//GEN-LAST:event_commButtonActionPerformed

    private void statsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsButtonActionPerformed
        // TODO add your handling code here:
        
        CardLayout cl = (CardLayout) viewpanel.getLayout();
        cl.show(viewpanel, "statistics");
                
    }//GEN-LAST:event_statsButtonActionPerformed

    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsButtonActionPerformed
        // TODO add your handling code here:
    // Remove existing content in settingsView
    settingsView.removeAll();

    // Create and add the SettingPanel to settingsView
    SettingPanel settingPanel = new SettingPanel();
    settingsView.setLayout(new BorderLayout());
    settingsView.add(settingPanel, BorderLayout.CENTER);

    // Refresh the panel
    settingsView.revalidate();
    settingsView.repaint();

    // Show the options panel
    CardLayout layout = (CardLayout) viewpanel.getLayout();
    layout.show(viewpanel, "options");
    }//GEN-LAST:event_optionsButtonActionPerformed

    private void btnUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsersActionPerformed
        // TODO add your handling code here:
              
    // Switch to Users panel
    CardLayout cl = (CardLayout) chartDisplayPanel.getLayout();
    cl.show(chartDisplayPanel, "usersPanel");

    // Generate default Users Pie Chart
    ChartPanel userPieChart = ChartUtils.createUserRolePieChart("User Data");

    // Update usersPanel
    usersPanel.removeAll();
    usersPanel.setLayout(new BorderLayout());
    usersPanel.add(userPieChart, BorderLayout.CENTER);
    usersPanel.revalidate();
    usersPanel.repaint();



    }//GEN-LAST:event_btnUsersActionPerformed

    private void btnResourcesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResourcesActionPerformed
                                       
    // Switch to usersPanel inside chartDisplayPanel
    CardLayout cl = (CardLayout) chartDisplayPanel.getLayout();
    cl.show(chartDisplayPanel, "usersPanel");

    // Create Pie Chart for Resources
    String[] resourceCategories = {"Available Resources", "Used Resources", "New Resources"};
    int[] resourceValues = {60, 20, 20}; 
    ChartPanel resourceChartPanel = ChartUtils.createResourceTypePieChart("Resource Distribution");

    // Ensure Resources chart is displayed within usersPanel
    usersPanel.removeAll();
    usersPanel.setLayout(new BorderLayout()); // Adapting to your layout structure
    usersPanel.add(resourceChartPanel, BorderLayout.CENTER);
    
    usersPanel.revalidate();
    usersPanel.repaint();


    }//GEN-LAST:event_btnResourcesActionPerformed

    private void accountSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountSettingsActionPerformed
        
        
        
    }//GEN-LAST:event_accountSettingsActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        // TODO add your handling code here:
          CardLayout cardLayout = (CardLayout) settingsView.getLayout();
        cardLayout.show(settingsView, "aboutPanel");
        
    }//GEN-LAST:event_aboutActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here
        
    // Get the selected chart type
    String selectedChartType = (String) jComboBox2.getSelectedItem();
System.out.println("Selected chart type: " + selectedChartType);
    // Switch to the Users panel
    CardLayout cl = (CardLayout) chartDisplayPanel.getLayout();
    
    cl.show(chartDisplayPanel, "usersPanel");

    // Clear existing content in usersPanel
    usersPanel.removeAll();

    // Generate and display the selected chart or table
    ChartPanel chartPanel = null;
    JScrollPane tablePanel = null;

    switch (selectedChartType) {
        case "Pie chart":
            chartPanel = ChartUtils.createUserRolePieChart("User Data");
            break;

        case "Bar graph":
            chartPanel = ChartUtils.createUserRoleBarGraph("User Stats", "Categories", "Count");
             
            break;

        case "Line graph":
            chartPanel = ChartUtils.createLineChart("User Trends", "Months", "User Count",
                new String[]{"Jan", "Feb", "Mar"},
                new int[]{100, 120, 140});
            break;

        case "Table":
            tablePanel = ChartUtils.createUsersTable();
            break;

        default:
            JLabel errorLabel = new JLabel("Unknown option selected.", SwingConstants.CENTER);
            usersPanel.add(errorLabel, BorderLayout.CENTER);
            break;
    }

    // Add the generated content to usersPanel
    if (chartPanel != null) {
        usersPanel.setLayout(new BorderLayout());
        usersPanel.add(chartPanel, BorderLayout.CENTER);
    } else if (tablePanel != null) {
        usersPanel.setLayout(new BorderLayout());
        usersPanel.add(tablePanel, BorderLayout.CENTER);
    }

    // Refresh usersPanel
    usersPanel.revalidate();
    usersPanel.repaint();
System.out.println("Selected chart type: " + selectedChartType);

        
    // Get the selected chart type
    System.out.println("Selected chart type for Resources: " + selectedChartType);

    // Switch to the Resources panel
   
    cl.show(chartDisplayPanel, "resourcesPanel");

    // Clear existing content in resourcesPanel
    resourcesPanel.removeAll();

    // Generate and display the selected chart or table
    

    switch (selectedChartType) {
        case "Pie chart":
            chartPanel = ChartUtils.createResourcePieChart("Resource Breakdown");
            break;

        case "Bar graph":
            chartPanel = ChartUtils.createBarChart("Resource Stats", "Categories", "Count",
                new String[]{"Available Resources", "Used Resources", "New Resources"},
                new int[]{60, 20, 20});
            break;

        case "Line graph":
            chartPanel = ChartUtils.createLineChart("Resource Trends", "Months", "Resource Count",
                new String[]{"Jan", "Feb", "Mar"},
                new int[]{200, 250, 300});
            break;

        case "Table":
            tablePanel = ChartUtils.createResourcesTable();
            break;

        default:
            JLabel errorLabel = new JLabel("Unknown option selected for Resources.", SwingConstants.CENTER);
            resourcesPanel.add(errorLabel, BorderLayout.CENTER);
            break;
    }

    // Add the generated content to resourcesPanel
    if (chartPanel != null) {
        resourcesPanel.setLayout(new BorderLayout());
        resourcesPanel.add(chartPanel, BorderLayout.CENTER);
    } else if (tablePanel != null) {
        resourcesPanel.setLayout(new BorderLayout());
        resourcesPanel.add(tablePanel, BorderLayout.CENTER);
    }

    // Refresh resourcesPanel
    resourcesPanel.revalidate();
    resourcesPanel.repaint();


    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    
        /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SidePane;
    private javax.swing.JPanel SummaryCards;
    private javax.swing.JPanel accountPanel;
    private javax.swing.JButton accountSettings;
    private javax.swing.JTextArea activeResponders;
    private javax.swing.JPanel alertsPanel;
    private javax.swing.JButton btnResources;
    private javax.swing.JButton btnUsers;
    private javax.swing.JPanel chartDisplayPanel;
    private javax.swing.JPanel chartSelectorPanel;
    private javax.swing.JButton commButton;
    private javax.swing.JPanel communications;
    private javax.swing.JPanel dashboard;
    private javax.swing.JButton dashboardButton;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mapView;
    private javax.swing.JPanel options;
    private javax.swing.JButton optionsButton;
    private javax.swing.JPanel resourcesPanel;
    private javax.swing.JTextArea resourcesUsed;
    private javax.swing.JPanel settingsTopNav;
    private javax.swing.JPanel settingsView;
    private javax.swing.JPanel statistics;
    private javax.swing.JButton statsButton;
    private javax.swing.JPanel usersPanel;
    private javax.swing.JPanel viewpanel;
    // End of variables declaration//GEN-END:variables
}
